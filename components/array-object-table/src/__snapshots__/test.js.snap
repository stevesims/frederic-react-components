// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArrayObjectTable matches snapshot 1`] = `
.c1 {
  display: table;
  font-family: "nta",Arial,sans-serif;
  width: 100%;
  border-collapse: collapse;
  table-layout: fixed;
}

.c3 {
  border-bottom: 1px solid #bfc1c3;
  display: table-cell;
  font-size: 14px;
  padding: 15px 5px;
  vertical-align: top;
}

.c3:first-child {
  padding: 15px 5px 15px 0;
}

.c3:last-child {
  padding: 15px 0 15px 5px;
}

.c2 {
  border-bottom: 1px solid #bfc1c3;
  display: table-cell;
  font-size: 14px;
  padding: 15px 5px;
  vertical-align: top;
  font-weight: bold;
  text-align: left;
}

.c2:first-child {
  padding: 15px 5px 15px 0;
}

.c2:last-child {
  padding: 15px 0 15px 5px;
}

.c0 {
  margin-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 15px;
  }
}

<ArrayObjectTable
  array={
    Array [
      Object {},
      Object {
        "one": "test",
        "two": "test",
      },
    ]
  }
  defaultTransform={[Function]}
  fields={
    Array [
      Object {
        "heading": "One",
        "key": "one",
      },
      Object {
        "heading": "Two",
        "key": "two",
        "transform": [Function],
      },
      Object {
        "heading": "Three",
        "key": "three",
      },
    ]
  }
  hideWithNoValues={false}
  skipEmptyRows={true}
  title={null}
>
  <Styled(Table)
    rows={
      Array [
        Array [
          "test",
          "two",
          "-",
        ],
      ]
    }
    titles={
      Array [
        "One",
        "Two",
        "Three",
      ]
    }
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-kjoXOD",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
            ],
          },
          "displayName": "Styled(Table)",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "margin": [Function],
            "mb": [Function],
            "padding": [Function],
          },
          "render": [Function],
          "styledComponentId": "sc-kjoXOD",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        }
      }
      forwardedRef={null}
      rows={
        Array [
          Array [
            "test",
            "two",
            "-",
          ],
        ]
      }
      titles={
        Array [
          "One",
          "Two",
          "Three",
        ]
      }
    >
      <Table
        borderless={false}
        className="c0"
        flexibleColumns={false}
        nameByRow={false}
        names={Array []}
        rowIncludesHeading={false}
        rows={
          Array [
            Array [
              "test",
              "two",
              "-",
            ],
          ]
        }
        spacing="15px"
        titles={
          Array [
            "One",
            "Two",
            "Three",
          ]
        }
      >
        <styled.table
          className="c0"
          flexibleColumns={false}
        >
          <StyledComponent
            className="c0"
            flexibleColumns={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-fAjcbJ",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "display: table; font-family: \\"nta\\", Arial, sans-serif; width: 100%; border-collapse: collapse;",
                    [Function],
                  ],
                },
                "displayName": "styled.table",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-fAjcbJ",
                "target": "table",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <table
              className="c0 c1"
            >
              <thead>
                <tr>
                  <styled.th
                    borderless={false}
                    key="0"
                    spacing="15px"
                  >
                    <StyledComponent
                      borderless={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-gisBJw",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "styled.th",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-gisBJw",
                          "target": "th",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      spacing="15px"
                    >
                      <th
                        className="c2"
                        spacing="15px"
                      >
                        One
                      </th>
                    </StyledComponent>
                  </styled.th>
                  <styled.th
                    borderless={false}
                    key="1"
                    spacing="15px"
                  >
                    <StyledComponent
                      borderless={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-gisBJw",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "styled.th",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-gisBJw",
                          "target": "th",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      spacing="15px"
                    >
                      <th
                        className="c2"
                        spacing="15px"
                      >
                        Two
                      </th>
                    </StyledComponent>
                  </styled.th>
                  <styled.th
                    borderless={false}
                    key="2"
                    spacing="15px"
                  >
                    <StyledComponent
                      borderless={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-gisBJw",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "styled.th",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-gisBJw",
                          "target": "th",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      spacing="15px"
                    >
                      <th
                        className="c2"
                        spacing="15px"
                      >
                        Three
                      </th>
                    </StyledComponent>
                  </styled.th>
                </tr>
              </thead>
              <tbody>
                <tr
                  key="0"
                >
                  <styled.td
                    borderless={false}
                    key="0"
                    spacing="15px"
                  >
                    <StyledComponent
                      borderless={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-caSCKo",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "styled.td",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-caSCKo",
                          "target": "td",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      spacing="15px"
                    >
                      <td
                        className="c3"
                        spacing="15px"
                      >
                        test
                      </td>
                    </StyledComponent>
                  </styled.td>
                  <styled.td
                    borderless={false}
                    key="1"
                    spacing="15px"
                  >
                    <StyledComponent
                      borderless={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-caSCKo",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "styled.td",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-caSCKo",
                          "target": "td",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      spacing="15px"
                    >
                      <td
                        className="c3"
                        spacing="15px"
                      >
                        two
                      </td>
                    </StyledComponent>
                  </styled.td>
                  <styled.td
                    borderless={false}
                    key="2"
                    spacing="15px"
                  >
                    <StyledComponent
                      borderless={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-caSCKo",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "styled.td",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-caSCKo",
                          "target": "td",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      spacing="15px"
                    >
                      <td
                        className="c3"
                        spacing="15px"
                      >
                        -
                      </td>
                    </StyledComponent>
                  </styled.td>
                </tr>
              </tbody>
            </table>
          </StyledComponent>
        </styled.table>
      </Table>
    </StyledComponent>
  </Styled(Table)>
</ArrayObjectTable>
`;
