// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Table matches snapshot 1`] = `
.c1 {
  display: table;
  font-family: "nta",Arial,sans-serif;
  width: 100%;
  border-collapse: collapse;
  table-layout: auto;
}

.c3 {
  border-bottom: 1px solid #bfc1c3;
  display: table-cell;
  font-size: 14px;
  padding: 15px 5px;
  vertical-align: top;
}

.c3:first-child {
  padding: 15px 5px 15px 0;
}

.c3:last-child {
  padding: 15px 0 15px 5px;
}

.c2 {
  border-bottom: 1px solid #bfc1c3;
  display: table-cell;
  font-size: 14px;
  padding: 15px 5px;
  vertical-align: top;
  font-weight: bold;
  text-align: left;
}

.c2:first-child {
  padding: 15px 5px 15px 0;
}

.c2:last-child {
  padding: 15px 0 15px 5px;
}

.c0 {
  margin-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 15px;
  }
}

<Styled(Table)
  flexibleColumns={true}
  name="name"
  nameByRow={true}
  names={
    Array [
      "heading",
      "one",
      Array [
        "i",
        "am",
        "named",
        "individually",
      ],
      "three",
    ]
  }
  rowIncludesHeading={true}
  rows={
    Array [
      Array [
        "Content 1-1",
        "Content 1-2",
        "Content 1-3",
        "Content 1-4",
      ],
      Array [
        "Content 2-1",
        "Content 2-2",
        "Content 2-3",
        "Content 2-4",
      ],
      Array [
        "Content 3-1",
        "Content 3-2",
        "Content 3-3",
        "Content 3-4",
      ],
    ]
  }
  titles={
    Array [
      "Heading 1",
      "Heading 2",
      "Heading 3",
      "Heading 4",
    ]
  }
>
  <StyledComponent
    flexibleColumns={true}
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bZQynM",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Styled(Table)",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "margin": [Function],
          "mb": [Function],
          "padding": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-bZQynM",
        "target": [Function],
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
        Symbol(Symbol.hasInstance): [Function],
      }
    }
    forwardedRef={null}
    name="name"
    nameByRow={true}
    names={
      Array [
        "heading",
        "one",
        Array [
          "i",
          "am",
          "named",
          "individually",
        ],
        "three",
      ]
    }
    rowIncludesHeading={true}
    rows={
      Array [
        Array [
          "Content 1-1",
          "Content 1-2",
          "Content 1-3",
          "Content 1-4",
        ],
        Array [
          "Content 2-1",
          "Content 2-2",
          "Content 2-3",
          "Content 2-4",
        ],
        Array [
          "Content 3-1",
          "Content 3-2",
          "Content 3-3",
          "Content 3-4",
        ],
      ]
    }
    titles={
      Array [
        "Heading 1",
        "Heading 2",
        "Heading 3",
        "Heading 4",
      ]
    }
  >
    <Table
      borderless={false}
      className="c0"
      flexibleColumns={true}
      name="name"
      nameByRow={true}
      names={
        Array [
          "heading",
          "one",
          Array [
            "i",
            "am",
            "named",
            "individually",
          ],
          "three",
        ]
      }
      rowIncludesHeading={true}
      rows={
        Array [
          Array [
            "Content 1-1",
            "Content 1-2",
            "Content 1-3",
            "Content 1-4",
          ],
          Array [
            "Content 2-1",
            "Content 2-2",
            "Content 2-3",
            "Content 2-4",
          ],
          Array [
            "Content 3-1",
            "Content 3-2",
            "Content 3-3",
            "Content 3-4",
          ],
        ]
      }
      spacing="15px"
      titles={
        Array [
          "Heading 1",
          "Heading 2",
          "Heading 3",
          "Heading 4",
        ]
      }
    >
      <styled.table
        className="c0"
        flexibleColumns={true}
        name="name"
      >
        <StyledComponent
          className="c0"
          flexibleColumns={true}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bxivhb",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  "display: table; font-family: \\"nta\\", Arial, sans-serif; width: 100%; border-collapse: collapse;",
                  [Function],
                ],
              },
              "displayName": "styled.table",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bxivhb",
              "target": "table",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          name="name"
        >
          <table
            className="c0 c1"
            name="name"
          >
            <thead>
              <tr>
                <styled.th
                  borderless={false}
                  key="0"
                  name="heading"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.th",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "th",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="heading"
                    spacing="15px"
                  >
                    <th
                      className="c2"
                      name="heading"
                      spacing="15px"
                    >
                      Heading 1
                    </th>
                  </StyledComponent>
                </styled.th>
                <styled.th
                  borderless={false}
                  key="1"
                  name="heading"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.th",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "th",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="heading"
                    spacing="15px"
                  >
                    <th
                      className="c2"
                      name="heading"
                      spacing="15px"
                    >
                      Heading 2
                    </th>
                  </StyledComponent>
                </styled.th>
                <styled.th
                  borderless={false}
                  key="2"
                  name="heading"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.th",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "th",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="heading"
                    spacing="15px"
                  >
                    <th
                      className="c2"
                      name="heading"
                      spacing="15px"
                    >
                      Heading 3
                    </th>
                  </StyledComponent>
                </styled.th>
                <styled.th
                  borderless={false}
                  key="3"
                  name="heading"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.th",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "th",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="heading"
                    spacing="15px"
                  >
                    <th
                      className="c2"
                      name="heading"
                      spacing="15px"
                    >
                      Heading 4
                    </th>
                  </StyledComponent>
                </styled.th>
              </tr>
            </thead>
            <tbody>
              <tr
                key="0"
              >
                <styled.th
                  borderless={false}
                  columnCount={4}
                  key="0"
                  name="one"
                  rowHeading={true}
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    columnCount={4}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.th",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "th",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="one"
                    rowHeading={true}
                    spacing="15px"
                  >
                    <th
                      className="c2"
                      name="one"
                      spacing="15px"
                    >
                      Content 1-1
                    </th>
                  </StyledComponent>
                </styled.th>
                <styled.td
                  borderless={false}
                  key="1"
                  name="one"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "styled.td",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "td",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="one"
                    spacing="15px"
                  >
                    <td
                      className="c3"
                      name="one"
                      spacing="15px"
                    >
                      Content 1-2
                    </td>
                  </StyledComponent>
                </styled.td>
                <styled.td
                  borderless={false}
                  key="2"
                  name="one"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "styled.td",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "td",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="one"
                    spacing="15px"
                  >
                    <td
                      className="c3"
                      name="one"
                      spacing="15px"
                    >
                      Content 1-3
                    </td>
                  </StyledComponent>
                </styled.td>
                <styled.td
                  borderless={false}
                  key="3"
                  name="one"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "styled.td",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "td",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="one"
                    spacing="15px"
                  >
                    <td
                      className="c3"
                      name="one"
                      spacing="15px"
                    >
                      Content 1-4
                    </td>
                  </StyledComponent>
                </styled.td>
              </tr>
              <tr
                key="1"
              >
                <styled.th
                  borderless={false}
                  columnCount={4}
                  key="0"
                  name="i"
                  rowHeading={true}
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    columnCount={4}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.th",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "th",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="i"
                    rowHeading={true}
                    spacing="15px"
                  >
                    <th
                      className="c2"
                      name="i"
                      spacing="15px"
                    >
                      Content 2-1
                    </th>
                  </StyledComponent>
                </styled.th>
                <styled.td
                  borderless={false}
                  key="1"
                  name="am"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "styled.td",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "td",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="am"
                    spacing="15px"
                  >
                    <td
                      className="c3"
                      name="am"
                      spacing="15px"
                    >
                      Content 2-2
                    </td>
                  </StyledComponent>
                </styled.td>
                <styled.td
                  borderless={false}
                  key="2"
                  name="named"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "styled.td",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "td",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="named"
                    spacing="15px"
                  >
                    <td
                      className="c3"
                      name="named"
                      spacing="15px"
                    >
                      Content 2-3
                    </td>
                  </StyledComponent>
                </styled.td>
                <styled.td
                  borderless={false}
                  key="3"
                  name="individually"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "styled.td",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "td",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="individually"
                    spacing="15px"
                  >
                    <td
                      className="c3"
                      name="individually"
                      spacing="15px"
                    >
                      Content 2-4
                    </td>
                  </StyledComponent>
                </styled.td>
              </tr>
              <tr
                key="2"
              >
                <styled.th
                  borderless={false}
                  columnCount={4}
                  key="0"
                  name="three"
                  rowHeading={true}
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    columnCount={4}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-EHOje",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.th",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-EHOje",
                        "target": "th",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="three"
                    rowHeading={true}
                    spacing="15px"
                  >
                    <th
                      className="c2"
                      name="three"
                      spacing="15px"
                    >
                      Content 3-1
                    </th>
                  </StyledComponent>
                </styled.th>
                <styled.td
                  borderless={false}
                  key="1"
                  name="three"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "styled.td",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "td",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="three"
                    spacing="15px"
                  >
                    <td
                      className="c3"
                      name="three"
                      spacing="15px"
                    >
                      Content 3-2
                    </td>
                  </StyledComponent>
                </styled.td>
                <styled.td
                  borderless={false}
                  key="2"
                  name="three"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "styled.td",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "td",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="three"
                    spacing="15px"
                  >
                    <td
                      className="c3"
                      name="three"
                      spacing="15px"
                    >
                      Content 3-3
                    </td>
                  </StyledComponent>
                </styled.td>
                <styled.td
                  borderless={false}
                  key="3"
                  name="three"
                  spacing="15px"
                >
                  <StyledComponent
                    borderless={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-ifAKCX",
                          "isStatic": false,
                          "lastClassName": "c3",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "styled.td",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-ifAKCX",
                        "target": "td",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    name="three"
                    spacing="15px"
                  >
                    <td
                      className="c3"
                      name="three"
                      spacing="15px"
                    >
                      Content 3-4
                    </td>
                  </StyledComponent>
                </styled.td>
              </tr>
            </tbody>
          </table>
        </StyledComponent>
      </styled.table>
    </Table>
  </StyledComponent>
</Styled(Table)>
`;
