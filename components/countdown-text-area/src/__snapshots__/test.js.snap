// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CountdownTextArea matches snapshot 1`] = `
.c1 {
  box-sizing: border-box;
  font-family: "nta",Arial,sans-serif;
  font-weight: 400;
  text-transform: none;
  font-size: 16px;
  line-height: 1.25;
  width: 100%;
  padding: 5px 4px 4px;
  border: 2px solid #0b0c0c;
  min-height: 250px;
}

.c1:focus {
  outline: 3px solid #ffbf47;
  outline-offset: 0;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  color: #b10e1e;
  font-weight: 800;
}

.c2 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  line-height: 1;
  position: relative;
  width: 0;
}

.c3 {
  position: absolute;
  bottom: 12px;
  right: 10px;
  font-family: "nta",Arial,sans-serif;
}

@media only screen and (min-width:641px) {
  .c1 {
    font-size: 19px;
    line-height: 1.3;
    width: 75%;
  }
}

<CountdownTextArea
  maxLength={2}
  noMaxLengthAttr={false}
  onChange={[MockFunction]}
  positiveOnly={false}
  value="Test"
>
  <styled.div
    maxLength={2}
    name="CountdownTextArea--container"
    noMaxLengthAttr={false}
    onChange={[MockFunction]}
    over={true}
    positiveOnly={false}
    value="Test"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-VigVT",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "display: flex; position: relative;",
              [Function],
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-VigVT",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      maxLength={2}
      name="CountdownTextArea--container"
      noMaxLengthAttr={false}
      onChange={[MockFunction]}
      over={true}
      positiveOnly={false}
      value="Test"
    >
      <div
        className="c0"
        maxLength={2}
        name="CountdownTextArea--container"
        onChange={[MockFunction]}
        value="Test"
      >
        <Styled(styled.textarea)
          maxLength={2}
          onChange={[MockFunction]}
          value="Test"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gqjmRU",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "box-sizing: border-box; font-family: \\"nta\\", Arial, sans-serif; font-weight: 400; text-transform: none; font-size: 16px; line-height: 1.25; @media only screen and (min-width: 641px) {
  font-size: 19px; line-height: 1.3; width: 75%;
} width: 100%; padding: 5px 4px 4px; border: 2px solid #0b0c0c; :focus {
  outline: 3px solid #ffbf47; outline-offset: 0;
}",
                    [Function],
                    "min-height: 250px;",
                  ],
                },
                "displayName": "Styled(styled.textarea)",
                "foldedComponentIds": Array [
                  "sc-gZMcBi",
                ],
                "render": [Function],
                "styledComponentId": "sc-gqjmRU",
                "target": "textarea",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            maxLength={2}
            onChange={[MockFunction]}
            value="Test"
          >
            <textarea
              className="c1"
              maxLength={2}
              onChange={[MockFunction]}
              value="Test"
            />
          </StyledComponent>
        </Styled(styled.textarea)>
        <styled.div
          name="CountdownTextArea--count_wrapper"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-jTzLTM",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "align-items: flex-end; display: flex; flex-grow: 0; line-height: 1; position: relative; width: 0;",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-jTzLTM",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            name="CountdownTextArea--count_wrapper"
          >
            <div
              className="c2"
              name="CountdownTextArea--count_wrapper"
            >
              <styled.div
                name="CountdownTextArea--count"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-fjdhpX",
                        "isStatic": true,
                        "lastClassName": "c3",
                        "rules": Array [
                          "position: absolute; bottom: 12px; right: 10px; font-family: \\"nta\\", Arial, sans-serif;",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-fjdhpX",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  name="CountdownTextArea--count"
                >
                  <div
                    className="c3"
                    name="CountdownTextArea--count"
                  >
                    -2
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</CountdownTextArea>
`;
