// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CounterBar matches snapshot 1`] = `
.emotion-22 {
  margin-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .emotion-22 {
    margin-bottom: 15px;
  }
}

.emotion-20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  line-height: 1;
  margin-bottom: 15px;
}

@media only screen and (min-width:641px) {
  .emotion-20 {
    margin-bottom: 15px;
  }
}

.emotion-6 {
  color: #005ea5;
  border: 0px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin: 0 6px 6px 0;
  outline: none;
  padding: 0 8px 0 0;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.emotion-6:visited {
  color: #005ea5;
}

.emotion-4 {
  display: inline-block;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.emotion-0 {
  background: #b10e1e;
  color: #ffffff;
  display: inline-block;
  font-family: "nta",Arial,sans-serif;
  font-size: 15px;
  line-height: 1.25;
  min-height: 20px;
  min-width: 20px;
  padding: 1px 4px;
  text-align: center;
}

.emotion-2 {
  display: inline-block;
  font-family: "nta",Arial,sans-serif;
  font-size: 15px;
  line-height: 1.25;
  margin-left: 10px;
}

.emotion-18 {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -6px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.emotion-14 {
  color: #005ea5;
  border: 0px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin: 0 6px 6px 0;
  outline: none;
  padding: 0 8px 0 0;
  -webkit-text-decoration: none;
  text-decoration: none;
  background: #005ea5;
  color: #ffffff;
  outline: 2px solid #005ea5;
  color: #ffffff;
  background: #005ea5;
}

.emotion-14:visited {
  color: #005ea5;
}

.emotion-14:focus {
  color: #0b0c0c;
  outline: solid 4px #ffbf47;
}

.emotion-14:hover,
.emotion-14:active {
  color: #0b0c0c;
}

.emotion-14:visited {
  color: #ffffff;
}

.emotion-14:focus,
.emotion-14:hover,
.emotion-14:active {
  color: #0b0c0c;
}

<HashRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Styled(Component)>
      <Component
        className="emotion-22"
      >
        <OuterWrapper
          className="emotion-22"
        >
          <div
            className="emotion-20 emotion-21"
          >
            <Total
              component="a"
              score={1}
              scoreBackgroundColor="#b10e1e"
              scoreColor="#ffffff"
              scoreDisabledBackgroundColor="#dee0e2"
              scoreDisabledColor="#0b0c0c"
            >
              <Item
                component="a"
                score={1}
                scoreBackgroundColor="#b10e1e"
                scoreColor="#ffffff"
                scoreDisabledBackgroundColor="#dee0e2"
                scoreDisabledColor="#0b0c0c"
                wrapper={[Function]}
              >
                <TotalWrapper
                  disabled={false}
                  empty={false}
                >
                  <a
                    className="emotion-6 emotion-7"
                    disabled={false}
                  >
                    <ResultCountTitle
                      count={1}
                      countBackgroundColor="#b10e1e"
                      countColor="#ffffff"
                    >
                      <Wrapper>
                        <div
                          className="emotion-4 emotion-1"
                        >
                          <ResultCount
                            backgroundColor="#b10e1e"
                            color="#ffffff"
                          >
                            <StyledResultCount
                              backgroundColor="#b10e1e"
                              color="#ffffff"
                            >
                              <span
                                className="emotion-0 emotion-1"
                                color="#ffffff"
                              >
                                1
                              </span>
                            </StyledResultCount>
                          </ResultCount>
                          <Title>
                            <div
                              className="emotion-2 emotion-3"
                            >
                              All counters
                            </div>
                          </Title>
                        </div>
                      </Wrapper>
                    </ResultCountTitle>
                  </a>
                </TotalWrapper>
              </Item>
            </Total>
            <CountersWrapper>
              <div
                className="emotion-18 emotion-19"
              >
                <Counter
                  active={true}
                  component={[Function]}
                  score={1}
                  scoreBackgroundColor="#b10e1e"
                  scoreColor="#ffffff"
                  scoreDisabledBackgroundColor="#dee0e2"
                  scoreDisabledColor="#0b0c0c"
                  to="/courses/1/"
                >
                  <Item
                    active={true}
                    component={[Function]}
                    score={1}
                    scoreBackgroundColor="#b10e1e"
                    scoreColor="#ffffff"
                    scoreDisabledBackgroundColor="#dee0e2"
                    scoreDisabledColor="#0b0c0c"
                    to="/courses/1/"
                    wrapper={[Function]}
                  >
                    <CounterWrapper
                      active={true}
                      disabled={false}
                      empty={false}
                      replace={false}
                      to="/courses/1/"
                    >
                      <Link
                        className="emotion-14 emotion-7"
                        disabled={false}
                        replace={false}
                        to="/courses/1/"
                      >
                        <a
                          className="emotion-14 emotion-7"
                          disabled={false}
                          href="#/courses/1/"
                          onClick={[Function]}
                        >
                          <ResultCountTitle
                            count={1}
                            countBackgroundColor="#b10e1e"
                            countColor="#ffffff"
                          >
                            <Wrapper>
                              <div
                                className="emotion-4 emotion-1"
                              >
                                <ResultCount
                                  backgroundColor="#b10e1e"
                                  color="#ffffff"
                                >
                                  <StyledResultCount
                                    backgroundColor="#b10e1e"
                                    color="#ffffff"
                                  >
                                    <span
                                      className="emotion-0 emotion-1"
                                      color="#ffffff"
                                    >
                                      1
                                    </span>
                                  </StyledResultCount>
                                </ResultCount>
                                <Title>
                                  <div
                                    className="emotion-2 emotion-3"
                                  >
                                    Counter 1
                                  </div>
                                </Title>
                              </div>
                            </Wrapper>
                          </ResultCountTitle>
                        </a>
                      </Link>
                    </CounterWrapper>
                  </Item>
                </Counter>
              </div>
            </CountersWrapper>
          </div>
        </OuterWrapper>
      </Component>
    </Styled(Component)>
  </Router>
</HashRouter>
`;
