// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CounterBar matches snapshot 1`] = `
.c4 {
  background: #b10e1e;
  color: #ffffff;
  display: inline-block;
  font-family: "nta",Arial,sans-serif;
  font-size: 15px;
  line-height: 1.25;
  min-height: 20px;
  min-width: 20px;
  padding: 1px 4px;
  text-align: center;
}

.c3 {
  display: inline-block;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.c5 {
  display: inline-block;
  font-family: "nta",Arial,sans-serif;
  font-size: 15px;
  line-height: 1.25;
  margin-left: 10px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  line-height: 1;
}

.c6 {
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: -6px;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c0 {
  margin-bottom: 15px;
}

.c2 {
  color: #005ea5;
  border: 0;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin: 0 6px 6px 0;
  outline: none;
  padding: 0 8px 0 0;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c2:visited {
  color: #005ea5;
}

.c7 {
  color: #ffffff;
  background: #005ea5;
}

.c7:visited {
  color: #ffffff;
}

.c7:focus,
.c7:hover,
.c7:active {
  color: #0b0c0c;
}

@media only screen and (min-width:641px) {
  .c0 {
    margin-bottom: 15px;
  }
}

<HashRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Styled(Component)>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "Counter": [Function],
            "Counters": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htoDjs",
                "isStatic": true,
                "lastClassName": "c6",
                "rules": Array [
                  "align-items: flex-start; display: flex; margin-right: -6px; flex: 1; flex-wrap: wrap;",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "propTypes": Object {
                "children": [Function],
              },
              "render": [Function],
              "styledComponentId": "sc-htoDjs",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
            "Item": [Function],
            "Total": [Function],
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-iwsKbI",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "Styled(Component)",
            "foldedComponentIds": Array [],
            "propTypes": Object {
              "children": [Function],
            },
            "render": [Function],
            "styledComponentId": "sc-iwsKbI",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          }
        }
        forwardedRef={null}
      >
        <Component
          className="c0"
        >
          <styled.div
            className="c0"
          >
            <StyledComponent
              className="c0"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c1",
                    "rules": Array [
                      "display: flex; flex-wrap: wrap; align-items: flex-start; line-height: 1;",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0 c1"
              >
                <Total
                  component="a"
                  score={1}
                  scoreBackgroundColor="#b10e1e"
                  scoreColor="#ffffff"
                  scoreDisabledBackgroundColor="#dee0e2"
                  scoreDisabledColor="#0b0c0c"
                >
                  <Item
                    component="a"
                    score={1}
                    scoreBackgroundColor="#b10e1e"
                    scoreColor="#ffffff"
                    scoreDisabledBackgroundColor="#dee0e2"
                    scoreDisabledColor="#0b0c0c"
                    wrapper={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": false,
                          "rules": Array [
                            "color: #005ea5; border: 0; flex: 1; margin: 0 6px 6px 0; outline: none; padding: 0 8px 0 0; text-decoration: none; :visited {
  color: #005ea5;
}",
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.a",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "a",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                  >
                    <styled.a
                      disabled={false}
                      empty={false}
                    >
                      <StyledComponent
                        disabled={false}
                        empty={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-brqgnP",
                              "isStatic": false,
                              "lastClassName": "c2",
                              "rules": Array [
                                "color: #005ea5; border: 0; flex: 1; margin: 0 6px 6px 0; outline: none; padding: 0 8px 0 0; text-decoration: none; :visited {
  color: #005ea5;
}",
                                [Function],
                                [Function],
                              ],
                            },
                            "displayName": "styled.a",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-brqgnP",
                            "target": "a",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                      >
                        <a
                          className="c2"
                          disabled={false}
                        >
                          <ResultCountTitle
                            count={1}
                            countBackgroundColor="#b10e1e"
                            countColor="#ffffff"
                          >
                            <styled.div>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-ifAKCX",
                                      "isStatic": true,
                                      "lastClassName": "c3",
                                      "rules": Array [
                                        "display: inline-block; white-space: nowrap; text-overflow: ellipsis;",
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-ifAKCX",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c3"
                                >
                                  <ResultCount
                                    backgroundColor="#b10e1e"
                                    color="#ffffff"
                                  >
                                    <styled.span
                                      backgroundColor="#b10e1e"
                                      color="#ffffff"
                                    >
                                      <StyledComponent
                                        backgroundColor="#b10e1e"
                                        color="#ffffff"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-bxivhb",
                                              "isStatic": false,
                                              "lastClassName": "c4",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "styled.span",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-bxivhb",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="c4"
                                          color="#ffffff"
                                        >
                                          1
                                        </span>
                                      </StyledComponent>
                                    </styled.span>
                                  </ResultCount>
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-EHOje",
                                            "isStatic": true,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              "display: inline-block; font-family: \\"nta\\", Arial, sans-serif; font-size: 15px; line-height: 1.25; margin-left: 10px;",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-EHOje",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c5"
                                      >
                                        All counters
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </ResultCountTitle>
                        </a>
                      </StyledComponent>
                    </styled.a>
                  </Item>
                </Total>
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-htoDjs",
                          "isStatic": true,
                          "lastClassName": "c6",
                          "rules": Array [
                            "align-items: flex-start; display: flex; margin-right: -6px; flex: 1; flex-wrap: wrap;",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "propTypes": Object {
                          "children": [Function],
                        },
                        "render": [Function],
                        "styledComponentId": "sc-htoDjs",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c6"
                    >
                      <Counter
                        active={true}
                        component={[Function]}
                        score={1}
                        scoreBackgroundColor="#b10e1e"
                        scoreColor="#ffffff"
                        scoreDisabledBackgroundColor="#dee0e2"
                        scoreDisabledColor="#0b0c0c"
                        to="/courses/1/"
                      >
                        <Item
                          active={true}
                          component={[Function]}
                          score={1}
                          scoreBackgroundColor="#b10e1e"
                          scoreColor="#ffffff"
                          scoreDisabledBackgroundColor="#dee0e2"
                          scoreDisabledColor="#0b0c0c"
                          to="/courses/1/"
                          wrapper={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-dnqmqq",
                                "isStatic": false,
                                "rules": Array [
                                  "color: #005ea5; border: 0; flex: 1; margin: 0 6px 6px 0; outline: none; padding: 0 8px 0 0; text-decoration: none; :visited {
  color: #005ea5;
}",
                                  [Function],
                                  [Function],
                                  "color: #ffffff;",
                                  [Function],
                                  [Function],
                                  [Function],
                                ],
                              },
                              "displayName": "Styled(styled.a)",
                              "foldedComponentIds": Array [
                                "sc-gzVnrw",
                              ],
                              "render": [Function],
                              "styledComponentId": "sc-dnqmqq",
                              "target": "a",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                        >
                          <Styled(Link)
                            active={true}
                            disabled={false}
                            empty={false}
                            to="/courses/1/"
                          >
                            <StyledComponent
                              active={true}
                              disabled={false}
                              empty={false}
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-cMljjf",
                                    "isStatic": false,
                                    "lastClassName": "c7",
                                    "rules": Array [
                                      "color: #ffffff;",
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Styled(Link)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-cMljjf",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                  Symbol(Symbol.hasInstance): [Function],
                                }
                              }
                              forwardedRef={null}
                              to="/courses/1/"
                            >
                              <Link
                                active={true}
                                className="c7"
                                disabled={false}
                                empty={false}
                                replace={false}
                                to="/courses/1/"
                              >
                                <a
                                  active={true}
                                  className="c7"
                                  disabled={false}
                                  empty={false}
                                  href="#/courses/1/"
                                  onClick={[Function]}
                                >
                                  <ResultCountTitle
                                    count={1}
                                    countBackgroundColor="#b10e1e"
                                    countColor="#ffffff"
                                  >
                                    <styled.div>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-ifAKCX",
                                              "isStatic": true,
                                              "lastClassName": "c3",
                                              "rules": Array [
                                                "display: inline-block; white-space: nowrap; text-overflow: ellipsis;",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-ifAKCX",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="c3"
                                        >
                                          <ResultCount
                                            backgroundColor="#b10e1e"
                                            color="#ffffff"
                                          >
                                            <styled.span
                                              backgroundColor="#b10e1e"
                                              color="#ffffff"
                                            >
                                              <StyledComponent
                                                backgroundColor="#b10e1e"
                                                color="#ffffff"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bxivhb",
                                                      "isStatic": false,
                                                      "lastClassName": "c4",
                                                      "rules": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "styled.span",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bxivhb",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <span
                                                  className="c4"
                                                  color="#ffffff"
                                                >
                                                  1
                                                </span>
                                              </StyledComponent>
                                            </styled.span>
                                          </ResultCount>
                                          <styled.div>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-EHOje",
                                                    "isStatic": true,
                                                    "lastClassName": "c5",
                                                    "rules": Array [
                                                      "display: inline-block; font-family: \\"nta\\", Arial, sans-serif; font-size: 15px; line-height: 1.25; margin-left: 10px;",
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-EHOje",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="c5"
                                              >
                                                Counter 1
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                  </ResultCountTitle>
                                </a>
                              </Link>
                            </StyledComponent>
                          </Styled(Link)>
                        </Item>
                      </Counter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
        </Component>
      </StyledComponent>
    </Styled(Component)>
  </Router>
</HashRouter>
`;
