{"version":3,"sources":["../src/index.unit.js"],"names":["packageExports","Object","keys","map","assert","exportName","end","dirs","fs","readdirSync","p","filter","statSync","path","join","f","isDirectory","components","__dirname","pkg","dependencies","component"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;;;AAEA;;IAAYA,c;;AACZ;;;;;;;;AAEA,oBAAK,yCAAL,EAAgD,YAAM;AACpD;AACAC,SAAOC,IAAP,CAAYF,cAAZ,EAA4BG,GAA5B,CAAgC,sBAAc;AAC5CC,WAAO,CAAC,CAACJ,eAAeK,UAAf,CAAT,EAAwCA,UAAxC;AACD,GAFD;AAGAD,SAAOE,GAAP;AACD,CAND;;AAQA;AACA,IAAMC,OAAO,SAAPA,IAAO;AAAA,SAAKC,aAAGC,WAAH,CAAeC,CAAf,EAAkBC,MAAlB,CAAyB;AAAA,WAAKH,aAAGI,QAAH,CAAYC,eAAKC,IAAL,CAAUJ,CAAV,EAAaK,CAAb,CAAZ,EAA6BC,WAA7B,EAAL;AAAA,GAAzB,CAAL;AAAA,CAAb;;AAEA,oBAAK,kCAAL,EAAyC,YAAM;AAC7C;AACA;AACA,MAAMC,aAAaV,KAAKM,eAAKC,IAAL,CAAUI,SAAV,EAAqB,qBAArB,CAAL,CAAnB;;AAEAD,aAAWd,GAAX,CAAe,qBAAa;AAC1BC,WAAO,CAAC,CAACe,kBAAIC,YAAJ,iCAA+CC,SAA/C,CAAT,EAAyEA,SAAzE;AACD,GAFD;AAGAjB,SAAOE,GAAP;AACD,CATD","file":"index.unit.js","sourcesContent":["import test from 'tape';\r\n\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nimport * as packageExports from './index';\r\nimport pkg from '../package.json';\r\n\r\ntest('index - ensure all items exported exist', () => {\r\n  // all exports are truthy\r\n  Object.keys(packageExports).map(exportName => {\r\n    assert(!!packageExports[exportName], `${exportName} is truthy`);\r\n  });\r\n  assert.end();\r\n});\r\n\r\n// https://stackoverflow.com/questions/18112204/get-all-directories-within-directory-nodejs?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa\r\nconst dirs = p => fs.readdirSync(p).filter(f => fs.statSync(path.join(p, f)).isDirectory());\r\n\r\ntest('Components exist in dependencies', () => {\r\n  // all componenents are dependencies of frederic-react-components\r\n  // if needed in future, can add an exclusion list/array to this test\r\n  const components = dirs(path.join(__dirname, '../../../components'));\r\n\r\n  components.map(component => {\r\n    assert(!!pkg.dependencies[`@frederic-react-components/${component}`], `${component} is in dependencies`);\r\n  });\r\n  assert.end();\r\n});\r\n"]}